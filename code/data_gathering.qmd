```{python}
import matplotlib.pyplot as plt
import osmnx as ox
import pyproj
import glob
from my_functions import * 
```


# import extent
```{python}
WGS84 = "EPSG:4326"
gdf_boundary_WGS84 = ox.geocode_to_gdf("Borneo").dropna(axis=1, how="any").to_crs(WGS84)

# Export the GeoDataFrame as a shapefile
gdf_boundary_WGS84.to_file("../../07_data_prepared/boundary/borneo_boundary_WGS84.shp")

input_shp = "../../07_data_prepared/boundary/borneo_boundary_WGS84.shp"
output_shp = "../../07_data_prepared/boundary/borneo_boundary_LAEA_Borneo.shp"

reproject_shapefile_to_wktcrs(input_shp, output_shp)

```



# prepare oil palm data (state 2019)

```{python}


oil_palm_2019 = gpd.read_file("../../06_data/vegetation/oil_palm/High_resolution_global_industrial_and_smallholder_oil_palm_map_for_2019/grid/grid.shp")

# Reproject oil_palm_2019 to match the CRS of gdf_boundary_LAEA_Borneo
input_shp = "../../06_data/vegetation/oil_palm/High_resolution_global_industrial_and_smallholder_oil_palm_map_for_2019/grid/grid.shp"
output_shp = "../../07_data_prepared/oil_palm/shp_grid/grid_LAEA_Borneo.shp"

reproject_shapefile_to_wktcrs(input_shp, output_shp)

oil_palm_2019_borneo = gpd.read_file("../../07_data_prepared/oil_palm/shp_grid/grid_LAEA_Borneo.shp").clip(gpd.read_file("../../07_data_prepared/boundary/borneo_boundary_LAEA_Borneo.shp"))

# Extract the 'ID' column values as a list
id_values = oil_palm_2019_borneo['ID'].tolist()

# Convert the values to integers and then to strings
id_values = [str(int(value)) for value in id_values]

# List to store the TIFF file paths
tif_files = []
reclassified_tif_files = []

# Construct the TIFF file paths and reclassify the individual TIFF files
directory = '../../06_data'

for value in id_values:
    tif_file = os.path.join(directory, f"vegetation/oil_palm/High_resolution_global_industrial_and_smallholder_oil_palm_map_for_2019/oil_palm_map/L2_2019b_{value}.tif")
    if os.path.exists(tif_file):
        tif_files.append(tif_file)
        path = os.path.join(directory, f"vegetation/oil_palm/High_resolution_global_industrial_and_smallholder_oil_palm_map_for_2019/oil_palm_reclasssified_borneo/LAEA_L2_2019b_{value}.tif")
        reclassify_values = {0: 3}
        reclassify(tif_file, path, reclassify_values)
        clip_tif_to_bbox(path, gdf_boundary_WGS84, path)
        change_values_outside_mask(path, path, gdf_boundary_WGS84, 0)

        reproject_raster_to_wktcrs(path, os.path.join(directory, f"vegetation/oil_palm/High_resolution_global_industrial_and_smallholder_oil_palm_map_for_2019/oil_palm_reclasssified_borneo/LAEA_L2_2019b_{value}.tif"))


        #reproject_raster(LAEA_Borneo, path, os.path.join(directory, f"vegetation/oil_palm/High_resolution_global_industrial_and_smallholder_oil_palm_map_for_2019/oil_palm_reclasssified_borneo/LAEA_L2_2019b_{value}.tif"))


        reclassified_tif_files.append(os.path.join(directory, f"vegetation/oil_palm/High_resolution_global_industrial_and_smallholder_oil_palm_map_for_2019/oil_palm_reclasssified_borneo/LAEA_L2_2019b_{value}.tif"))
    else:
        print(f"File not found: {tif_file}")


# Merge the processed TIFF files
merge_tif_files(reclassified_tif_files, '../../07_data_prepared/oil_palm/LAEA_oil_palm_2019_borneo.tif')



```

# prepare oil palm detection data
```{python}

tif_files = ['../../06_data/vegetation/oil_palm/year_of_detection/op_extent_age_N.tif', '../../06_data/vegetation/oil_palm/year_of_detection/op_extent_age_S.tif']

merge_tif_files(tif_files, '../../07_data_prepared/oil_palm/detection_year.tif')

clip_tif_to_bbox('../../07_data_prepared/oil_palm/detection_year.tif', gdf_boundary_WGS84, '../../07_data_prepared/oil_palm/detection_year.tif')

change_values_outside_mask('../../07_data_prepared/oil_palm/detection_year.tif', '../../07_data_prepared/oil_palm/detection_year.tif', gdf_boundary_WGS84, 0)

# data information: The data values range from 0 to 37 where 0 is no data and subsequent numbers run through until 2017, the last year of our analysis. A value of 4 corresponds to the year 1984, the first year oil palm was detected and 37 corresponds to 2017. Values 1 to 3 are not present.
# --> therefore every yea

reclassify_values = {2000: list(range(1, 21)),
                     2001: 21,
                     2002: 22,
                     2003: 23,
                     2004: 24,
                     2005: 25,
                     2006: 26,
                     2007: 27,
                     2008: 28,
                     2009: 29,
                     2010: 30,
                     2011: 31,
                     2012: 32,
                     2013: 33,
                     2014: 34,
                     2015: 35,
                     2016: 36,
                     2017: 37}
reclassify('../../07_data_prepared/oil_palm/detection_year.tif', '../../07_data_prepared/oil_palm/detection_year_2000_2017.tif', reclassify_values)



# reproject to LAEA Borneo
reproject_raster_to_wktcrs('../../07_data_prepared/oil_palm/detection_year_2000_2017.tif', '../../07_data_prepared/oil_palm/LAEA_detection_year_2000_2017.tif')

```




# prepare global forest watch data
## deforestation
```{python}
tif_files = ['../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_lossyear_00N_100E.tif', '../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_lossyear_00N_110E.tif', '../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_lossyear_10N_100E.tif', '../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_lossyear_10N_110E.tif']

merge_tif_files(tif_files, '../../07_data_prepared/deforestation/gfw_lossyear_2000_2022_borneo.tif')

clip_tif_to_bbox('../../07_data_prepared/deforestation/gfw_lossear_2000_2022_borneo.tif', gdf_boundary_WGS84, '../../07_data_prepared/deforestation/gfw_2000_2022_borneo.tif')

change_values_outside_mask('../../07_data_prepared/deforestation/gfw_lossyear_2000_2022_borneo.tif', '../../07_data_prepared/deforestation/gfw_2000_2022_borneo.tif', gdf_boundary_WGS84, 0)

# reproject to LAEA Projection
reproject_raster_to_wktcrs('../../07_data_prepared/deforestation/gfw_2000_2022_borneo.tif', '../../07_data_prepared/deforestation/LAEA_gfw_2000_2022_borneo.tif')

```

## forest cover 2000
```{python}
tif_files = ['../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_treecover2000_00N_100E.tif', '../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_treecover2000_00N_110E.tif', '../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_treecover2000_10N_100E.tif', '../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_treecover2000_10N_110E.tif']

merge_tif_files(tif_files, '../../07_data_prepared/deforestation/gfw_fcover_2000_borneo.tif')

clip_tif_to_bbox('../../07_data_prepared/deforestation/gfw_fcover_2000_borneo.tif', gdf_boundary_WGS84, '../../07_data_prepared/deforestation/gfw_fcover_2000_borneo.tif')

change_values_outside_mask('../../07_data_prepared/deforestation/gfw_fcover_2000_borneo.tif', '../../07_data_prepared/deforestation/gfw_fcover_2000_borneo.tif', gdf_boundary_WGS84, 0)

# reproject to epsg:23846
reproject_raster_to_wktcrs('../../07_data_prepared/deforestation/gfw_fcover_2000_borneo.tif', '../../07_data_prepared/deforestation/LAEA_gfw_fcover_2000_borneo.tif')

```

## forest gain 
```{python}
tif_files = ['../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_gain_00N_100E.tif', '../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_gain_00N_110E.tif', '../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_gain_10N_100E.tif', '../../06_data/deforestation/global_forest_watch/Hansen_GFC_2021_v1_9_gain_10N_110E.tif']

merge_tif_files(tif_files, '../../07_data_prepared/deforestation/gfw_gain_2000_2012_borneo.tif')

clip_tif_to_bbox('../../07_data_prepared/deforestation/gfw_gain_2000_2012_borneo.tif', gdf_boundary_WGS84, '../../07_data_prepared/deforestation/gfw_gain_2000_2012_borneo.tif')

change_values_outside_mask('../../07_data_prepared/deforestation/gfw_gain_2000_2012_borneo.tif', '../../07_data_prepared/deforestation/gfw_gain_2000_2012_borneo.tif', gdf_boundary_WGS84, 0)

# reproject to epsg:23846
reproject_raster_to_wktcrs('../../07_data_prepared/deforestation/gfw_gain_2000_2012_borneo.tif', '../../07_data_prepared/deforestation/LAEA_gfw_gain_2000_2012_borneo_test.tif')

```


# prepare forest fire data
```{python}
clip_tif_to_bbox('../../06_data/deforestation/forest_fires/fire_forest_loss_2001-22_annual.tiff', gdf_boundary_WGS84, '../../07_data_prepared/deforestation/forest_fires.tif')

change_values_outside_mask('../../07_data_prepared/deforestation/forest_fires.tif', '../../07_data_prepared/deforestation/forest_fires.tif', gdf_boundary_WGS84, 0)

# reproject to epsg:23846
reproject_raster_to_wktcrs('../../07_data_prepared/deforestation/forest_fires.tif', '../../07_data_prepared/deforestation/LAEA_forest_fires.tif')

```

# primary forest
```{python}
clip_tif_to_bbox('../../06_data/deforestation/primary_forest/Asia_2001_primary.tif', gdf_boundary_WGS84, '../../07_data_prepared/deforestation/primary_forest_2001.tif')

change_values_outside_mask('../../07_data_prepared/deforestation/primary_forest_2001.tif', '../../07_data_prepared/deforestation/primary_forest_2001.tif', gdf_boundary_WGS84, 0)

# reproject to epsg:23846
reproject_raster_to_wktcrs('../../07_data_prepared/deforestation/primary_forest_2001.tif', '../../07_data_prepared/deforestation/LAEA_primary_forest_2001.tif')
```

# clip protected areas to boundary
```{python}
shapefile_path = "../../06_data/protected_areas/WDPA_WDOECM_Apr2023_Public_AS_shp/WDPA_WDOECM_Apr2023_Public_AS_shp_0/WDPA_WDOECM_Apr2023_Public_AS_shp-polygons.shp"
shapefile_gdf = gpd.read_file(shapefile_path)

clipped_gdf = gpd.clip(shapefile_gdf, gdf_boundary_WGS84.geometry)

clipped_gdf.to_file("../../07_data_prepared/protected_areas/protected_areas_borneo.shp")

input_shp = "../../07_data_prepared/protected_areas/protected_areas_borneo.shp"
output_shp = "../../07_data_prepared/protected_areas/LAEA_protected_areas_borneo.shp"

reproject_shapefile_to_wktcrs(input_shp, output_shp)

```

# RSPO concessions
```{python}
shapefile_path = "../../06_data/RSPO/RSPO_Concessions_Versions6_20Jan2023.shp"
shapefile_gdf = gpd.read_file(shapefile_path)
shapefile_gdf = shapefile_gdf.to_crs(epsg=4326)

clipped_gdf = gpd.clip(shapefile_gdf, gdf_boundary_WGS84.geometry)

clipped_gdf.to_file("../../07_data_prepared/RSPO/WGS84_RSPO_2023.shp")

input_shp = "../../07_data_prepared/RSPO/WGS84_RSPO_2023.shp"
output_shp = "../../07_data_prepared/RSPO/LAEA_RSPO_2023.shp"

reproject_shapefile_to_wktcrs(input_shp, output_shp)
```

# prepare cropland data

## total cropland
```{python}

# Save the current working directory
script_dir = os.path.abspath(os.path.dirname(__file__))

# Set the cropland directory
cropland_dir = os.path.join(script_dir, '../../06_data/vegetation/cropland')

# Get a list of all TIFF files in the cropland directory
tif_files = [os.path.abspath(file) for file in glob.glob(os.path.join(cropland_dir, '*.tif'))]

# Set the output directory for the clipped TIFF files
clipped_cropland_dir = os.path.join(script_dir, '../../06_data/vegetation/cropland/clipped_borneo')
os.makedirs(clipped_cropland_dir, exist_ok=True)

# Clip the TIFF files
for file in tif_files:
    # Construct the output file name
    output_file = os.path.basename(file).replace('Global', 'borneo')

    # Set the output file path
    output_path = os.path.join(clipped_cropland_dir, output_file)

    # Clip the TIFF file
    clip_tif_to_bbox(file, gdf_boundary_WGS84, output_path)

tif_files_2003 = [os.path.join(clipped_cropland_dir,  'borneo_cropland_NE_2003.tif'), os.path.join(clipped_cropland_dir,  'borneo_cropland_SE_2003.tif')]
tif_files_2007 = [os.path.join(clipped_cropland_dir,  'borneo_cropland_NE_2007.tif'), os.path.join(clipped_cropland_dir,  'borneo_cropland_SE_2007.tif')]
tif_files_2011 = [os.path.join(clipped_cropland_dir,  'borneo_cropland_NE_2011.tif'), os.path.join(clipped_cropland_dir,  'borneo_cropland_SE_2011.tif')]
tif_files_2015 = [os.path.join(clipped_cropland_dir,  'borneo_cropland_NE_2015.tif'), os.path.join(clipped_cropland_dir,  'borneo_cropland_SE_2015.tif')]
tif_files_2019 = [os.path.join(clipped_cropland_dir,  'borneo_cropland_NE_2019.tif'), os.path.join(clipped_cropland_dir,  'borneo_cropland_SE_2019.tif')]

# Set the output directory for the merged TIFF files
merge_output_dir = os.path.join(script_dir, '../../07_data_prepared/cropland')
os.makedirs(merge_output_dir, exist_ok=True)

merge_tif_files(tif_files_2003, os.path.join(merge_output_dir,f'borneo_cropland_2003.tif'))
merge_tif_files(tif_files_2007, os.path.join(merge_output_dir,f'borneo_cropland_2007.tif'))
merge_tif_files(tif_files_2011, os.path.join(merge_output_dir,f'borneo_cropland_2011.tif'))
merge_tif_files(tif_files_2015, os.path.join(merge_output_dir,f'borneo_cropland_2015.tif'))
merge_tif_files(tif_files_2019, os.path.join(merge_output_dir,f'borneo_cropland_2019.tif'))

change_values_outside_mask(os.path.join(merge_output_dir,f'borneo_cropland_2003.tif'), os.path.join(merge_output_dir,f'borneo_cropland_2003.tif'), mask=gdf_boundary_WGS84)
change_values_outside_mask(os.path.join(merge_output_dir,f'borneo_cropland_2007.tif'), os.path.join(merge_output_dir,f'borneo_cropland_2007.tif'), mask=gdf_boundary_WGS84)
change_values_outside_mask(os.path.join(merge_output_dir,f'borneo_cropland_2011.tif'), os.path.join(merge_output_dir,f'borneo_cropland_2011.tif'), mask=gdf_boundary_WGS84)
change_values_outside_mask(os.path.join(merge_output_dir,f'borneo_cropland_2015.tif'), os.path.join(merge_output_dir,f'borneo_cropland_2015.tif'), mask=gdf_boundary_WGS84)
change_values_outside_mask(os.path.join(merge_output_dir,f'borneo_cropland_2019.tif'), os.path.join(merge_output_dir,f'borneo_cropland_2019.tif'), mask=gdf_boundary_WGS84)

reproject_raster_to_wktcrs(os.path.join(merge_output_dir,f'borneo_cropland_2003.tif'), os.path.join(merge_output_dir,f'LAEA_borneo_cropland_2003.tif'))
reproject_raster_to_wktcrs(os.path.join(merge_output_dir,f'borneo_cropland_2007.tif'), os.path.join(merge_output_dir,f'LAEA_borneo_cropland_2007.tif'))
reproject_raster_to_wktcrs(os.path.join(merge_output_dir,f'borneo_cropland_2011.tif'), os.path.join(merge_output_dir,f'LAEA_borneo_cropland_2011.tif'))
reproject_raster_to_wktcrs(os.path.join(merge_output_dir,f'borneo_cropland_2015.tif'), os.path.join(merge_output_dir,f'LAEA_borneo_cropland_2015.tif'))
reproject_raster_to_wktcrs(os.path.join(merge_output_dir,f'borneo_cropland_2019.tif'), os.path.join(merge_output_dir,f'LAEA_borneo_cropland_2019.tif'))


```

## 2000
```{python}
root_folder = '../../06_data/vegetation/crops_2000/HarvestedAreaYield175Crops_Geotiff'
keyword = 'HarvestedAreaHectares' 
minimum_area = 1

tif_files = find_tif_files_with_polygon(root_folder, gdf_boundary_WGS84, keyword, minimum_area)

for tif_path in tif_files:

    file_name = os.path.basename(tif_path)
    # Clip the TIFF to the boundary
    input_file = tif_path
    output_directory = "../../07_data_prepared/crop_type/crops_2000/original_crs"
    clipped_output_file = os.path.join(output_directory, file_name.replace(".tif", "_clipped.tif"))
    clip_tif_to_bbox(input_file, gdf_boundary_WGS84, clipped_output_file)

    # Change values outside the mask to 0
    input_file = clipped_output_file
    output_file = os.path.join(output_directory, file_name.replace("_clipped.tif", ".tif"))
    change_values_outside_mask(input_file, output_file, gdf_boundary_WGS84, new_value=0)
    
    # Delete the clipped TIFF file
    os.remove(clipped_output_file)

    # Reproject the masked TIFF
    input_file = output_file
    output_directory = "../../07_data_prepared/crop_type/crops_2000/LAEA"
    output_file = os.path.join(output_directory, "LAEA_" + file_name)
    reproject_raster_to_wktcrs(input_file, output_file)
```

## 2010
```{python}
root_folder = '../../06_data/vegetation/crops_2010/spam2010v2r0_global_harv_area.geotiff'
keyword = 'A.tif' 
minimum_area = 1

tif_files = find_tif_files_with_polygon(root_folder, gdf_boundary_WGS84, keyword, minimum_area)

for tif_path in tif_files:

    file_name = os.path.basename(tif_path)
    # Clip the TIFF to the boundary
    input_file = tif_path
    output_directory = "../../07_data_prepared/crop_type/crops_2010/original_crs"
    clipped_output_file = os.path.join(output_directory, file_name.replace(".tif", "_clipped.tif"))
    clip_tif_to_bbox(input_file, gdf_boundary_WGS84, clipped_output_file)

    # Change values outside the mask to 0
    input_file = clipped_output_file
    output_file = os.path.join(output_directory, file_name.replace("_clipped.tif", ".tif"))
    change_values_outside_mask(input_file, output_file, gdf_boundary_WGS84, new_value=0)
    
    # Delete the clipped TIFF file
    os.remove(clipped_output_file)

    # Reproject the masked TIFF
    input_file = output_file
    output_directory = "../../07_data_prepared/crop_type/crops_2010/LAEA"
    output_file = os.path.join(output_directory, "LAEA_" + file_name)
    reproject_raster_to_wktcrs(input_file, output_file)
```

## 2015
```{python}
root_folder = '../../06_data/vegetation/crops_2015'
keyword = 'Total' 
minimum_area = 1

tif_files = find_tif_files_with_polygon(root_folder, gdf_boundary_WGS84, keyword, minimum_area)

for tif_path in tif_files:

    file_name = os.path.basename(tif_path)
    # Clip the TIFF to the boundary
    input_file = tif_path
    output_directory = "../../07_data_prepared/crop_type/crops_2015/original_crs"
    clipped_output_file = os.path.join(output_directory, file_name.replace(".tif", "_clipped.tif"))
    clip_tif_to_bbox(input_file, gdf_boundary_WGS84, clipped_output_file)

    # Change values outside the mask to 0
    input_file = clipped_output_file
    output_file = os.path.join(output_directory, file_name.replace("_clipped.tif", ".tif"))
    change_values_outside_mask(input_file, output_file, gdf_boundary_WGS84, new_value=0)
    
    # Delete the clipped TIFF file
    os.remove(clipped_output_file)

    # Reproject the masked TIFF
    input_file = output_file
    output_directory = "../../07_data_prepared/crop_type/crops_2015/LAEA"
    output_file = os.path.join(output_directory, "LAEA_" + file_name)
    reproject_raster_to_wktcrs(input_file, output_file)
```


# prepare infrastructure data
```{python}


# Save the current working directory
script_dir = os.path.abspath(os.path.dirname(__file__))

# Set the cropland directory
infra_dir = os.path.join(script_dir, '../../06_data/infrastructure/built_up_areas_2000_2020')

# Get a list of all TIFF files in the cropland directory
tif_files = [os.path.abspath(file) for file in glob.glob(os.path.join(infra_dir, '*.tif'))]

# Set the output directory for the clipped TIFF files
clipped__dir = os.path.join(script_dir, '../../06_data/infrastructure/built_up_areas_2000_2020/borneo_clipped')
os.makedirs(infra_dir, exist_ok=True)

# Clip the TIFF files
for file in tif_files:
    # Construct the output file name
    output_file = os.path.basename(file).replace('Change', 'Borneo_Change')

    # Set the output file path
    output_path = os.path.join(clipped__dir, output_file)

    # Clip the TIFF file
    clip_tif_to_bbox(file, gdf_boundary_WGS84, output_path)

tif_files = [os.path.abspath(file) for file in glob.glob(os.path.join(clipped__dir, '*.tif'))]

# Set the output directory for the merged TIFF files
merge_output_dir = os.path.join(script_dir, '../../07_data_prepared/infrastructure')
os.makedirs(merge_output_dir, exist_ok=True)

merge_tif_files(tif_files, os.path.join(merge_output_dir,f'build_up_area.tif'))


change_values_outside_mask(os.path.join(merge_output_dir,f'build_up_area.tif'), os.path.join(merge_output_dir,f'build_up_area.tif'), mask=gdf_boundary_WGS84)


reproject_raster_to_wktcrs(os.path.join(merge_output_dir,f'build_up_area.tif'), os.path.join(merge_output_dir,f'LAEA_build_up_area.tif'))



```